{"version":3,"file":"image-pal-rgb.js","sources":["webpack:///webpack/bootstrap","webpack:///./lib/rgb.js","webpack:///./lib/shared/get-colors.js","webpack:///./lib/shared/get-options.js","webpack:///./webpack/rgb.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./webpack/rgb.js\");\n","\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar getOptions = require('./shared/get-options');\n\nvar getColors = require('./shared/get-colors');\n\nmodule.exports = function (imageData, _ref) {\n  var colorPlacer = _ref.colorPlacer,\n      options = _objectWithoutProperties(_ref, [\"colorPlacer\"]);\n\n  var opts = _objectSpread({\n    colorPlacer: colorPlacer || rgbColorPlacer\n  }, getOptions(options));\n\n  return getColors(imageData, opts);\n};\n\nfunction rgbColorPlacer(c) {\n  return [c.rgb[0] / 256, c.rgb[1] / 256, c.rgb[2] / 256];\n}","\"use strict\";\n\nmodule.exports = function (imageData, _ref) {\n  var hasAlpha = _ref.hasAlpha,\n      maxColors = _ref.maxColors,\n      minDensity = _ref.minDensity,\n      cubicCells = _ref.cubicCells,\n      mean = _ref.mean,\n      order = _ref.order,\n      applyColor = _ref.applyColor,\n      colorPlacer = _ref.colorPlacer;\n  // pre-allocate cells3d[x][y][z]\n  // pre-allocate cells[i]\n  var x, y, z, i, cell;\n  var cells3d = new Array(cubicCells);\n  var cells = new Array(Math.pow(cubicCells, 3));\n\n  for (x = 0, i = 0; x < cubicCells; x++) {\n    cells3d[x] = new Array(cubicCells);\n\n    for (y = 0; y < cubicCells; y++) {\n      cells3d[x][y] = new Array(cubicCells);\n\n      for (z = 0; z < cubicCells; z++, i++) {\n        cells3d[x][y][z] = cells[i] = [];\n      }\n    }\n  }\n\n  var bytesPerPixel = hasAlpha ? 4 : 3; // color placement\n\n  var _byte, color;\n\n  var pixels = Math.floor(imageData.length / bytesPerPixel);\n\n  for (_byte = 0, i = 0; i < pixels; _byte += bytesPerPixel, i++) {\n    color = {\n      rgb: [imageData[_byte], imageData[_byte + 1], imageData[_byte + 2]],\n      alpha: hasAlpha ? imageData[_byte + 3] : 255\n    };\n    if (applyColor) applyColor(color); // apply any color logic, if any\n\n    color.xyz = colorPlacer(color);\n    color.distance = getDistance(color);\n    var xyz = findCell(color.xyz, cubicCells);\n    cells3d[xyz[0]][xyz[1]][xyz[2]].push(color);\n  } // sort cells\n\n\n  cells.sort(function (a, b) {\n    return a.length > b.length ? -1 : a.length < b.length ? 1 : 0;\n  }); // compute cell densities\n\n  var cellDensities = cells.map(function (colors) {\n    return {\n      density: colors.length / pixels,\n      colors: colors\n    };\n  }); // remove cells that don't meet min criteria\n\n  cellDensities = cellDensities.filter(function (cellData) {\n    return cellData.density >= minDensity;\n  });\n  /* support for maxDensity is disabled for now -- not working as intended. might need a per-colour-space filter option\n  if (maxDensity && cellDensities.length > 1 && cellDensities[0].density >= maxDensity) {\n    // only filter if:\n    // 1. maxDensity is enabled\n    // 2. More than one cell exists\n    // 3. Meets the maxDensity requirement\n    // 4. Never filter more than the first matching cell\n    cellDensities = cellDensities.slice(1); // remove first\n  }*/\n  // adhere to maxColors\n\n  if (cellDensities.length > maxColors) {\n    cellDensities = cellDensities.slice(0, maxColors);\n  } // with remaining cells that match critera, extract mean or median colors\n\n\n  var palette = cellDensities.map(function (cellData) {\n    if (mean) {\n      // apply mean calculations\n      var sumRgb = cellData.colors.reduce(function (state, c) {\n        state.r += c.rgb[0];\n        state.g += c.rgb[1];\n        state.b += c.rgb[2];\n        return state;\n      }, {\n        r: 0,\n        g: 0,\n        b: 0\n      });\n      var len = cellData.colors.length;\n      color = {\n        rgb: [Math.min(255, Math.round(sumRgb.r / len)), Math.min(255, Math.round(sumRgb.g / len)), Math.min(255, Math.round(sumRgb.b / len))],\n        alpha: cellData.colors[0].alpha // dumb alpha copy\n\n      };\n      if (applyColor) applyColor(color); // update if color applicator provided\n\n      color.xyz = colorPlacer(color); // re-calc placement in 3d space\n    } else {\n      // grab median color\n      // first we must sort based on distance\n\n      /* istanbul ignore next */\n      var colorsByDistance = cellData.colors.sort(function (a, b) {\n        return a.distance > b.distance ? -1 : a.distance < b.distance ? 1 : 0;\n      }); // now we can grab median\n\n      color = colorsByDistance[Math.floor(cellData.colors.length / 2)];\n    } // attach hex colors for final palette\n\n\n    color.hex = rgbToHex(color.rgb[0], color.rgb[1], color.rgb[2]);\n    color.density = cellData.density;\n    color.distance = getDistance(color);\n    return color;\n  });\n\n  if (order === 'distance') {\n    // sort by distance\n\n    /* istanbul ignore next */\n    palette = palette.sort(function (a, b) {\n      return a.distance > b.distance ? -1 : a.distance < b.distance ? 1 : 0;\n    });\n  } // else, already sorted by density\n\n\n  return palette;\n};\n\nfunction findCell(xyz, cubicCells) {\n  return [Math.max(0, Math.ceil(Math.min(xyz[0], 1) * cubicCells) - 1), Math.max(0, Math.ceil(Math.min(xyz[1], 1) * cubicCells) - 1), Math.max(0, Math.ceil(Math.min(xyz[2], 1) * cubicCells) - 1)];\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nfunction getDistance(color) {\n  return color.distance = color.xyz[0] + color.xyz[1] * 10 + color.xyz[2] * 100;\n} // https://www.compuphase.com/cmetric.htm\n\n/*function distanceSorter(c1, c2) {\n  const rmean = ( c1.rgb[0] + c2.rgb[0] ) / 2;\n  const r = c1.rgb[0] - c2.rgb[0];\n  const g = c1.rgb[1] - c2.rgb[1];\n  const b = c1.rgb[2] - c2.rgb[2];\n  return Math.sqrt((((512+rmean)*r*r)>>8) + 4*g*g + (((767-rmean)*b*b)>>8));\n}*/","\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nmodule.exports = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var hasAlpha = _ref.hasAlpha,\n      maxColors = _ref.maxColors,\n      minDensity = _ref.minDensity,\n      cubicCells = _ref.cubicCells,\n      mean = _ref.mean,\n      order = _ref.order,\n      otherOptions = _objectWithoutProperties(_ref, [\"hasAlpha\", \"maxColors\", \"minDensity\", \"cubicCells\", \"mean\", \"order\"]);\n\n  if (typeof hasAlpha !== 'boolean') throw new Error('options.hasAlpha is required');\n\n  var options = _objectSpread({\n    hasAlpha: hasAlpha,\n    maxColors: Math.min(Math.max(1, maxColors), 32) || 10,\n    minDensity: Math.min(Math.max(0.001, minDensity), 1) || 0.005,\n    //maxDensity: maxDensity === false ? false : (Math.min(Math.max(0.001, maxDensity), 1) || false),\n    cubicCells: Math.min(Math.max(3, cubicCells), 4) || 4,\n    mean: mean === false ? false : true,\n    order: order === 'density' ? order : 'distance'\n  }, otherOptions);\n\n  return options;\n};","import imagePal from '../lib/rgb';\r\n\r\nwindow.imagePalRgb = imagePal;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtJA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAEA;;;;A","sourceRoot":""}